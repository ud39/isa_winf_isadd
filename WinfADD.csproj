<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>netcoreapp2.2</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

        <!-- Set this to true if you enable server-side prerendering -->
        <BuildServerSideRenderer>false</BuildServerSideRenderer>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Dapper" Version="1.60.6" />
        <PackageReference Include="Dapper.Contrib" Version="1.60.1" />
        <PackageReference Include="Dapper.SqlBuilder" Version="1.60.1" />
        <PackageReference Include="Microsoft.AspNetCore.App" />
        <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="2.2.4" />
        <PackageReference Include="Npgsql" Version="4.0.7" />
        <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="2.2.0" />
        <PackageReference Include="System.Linq" Version="4.3.0" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
        <None Include="ClientApp\src\app\common\home\home.component.html" />
        <None Include="ClientApp\src\app\common\home\home.component.ts" />
        <None Include="ClientApp\src\app\common\page-not-found\page-not-found.component.css" />
        <None Include="ClientApp\src\app\common\page-not-found\page-not-found.component.html" />
        <None Include="ClientApp\src\app\common\registration\registration.component.css" />
        <None Include="ClientApp\src\app\common\registration\registration.component.html" />
        <None Include="ClientApp\src\app\content\article\article.component.css" />
        <None Include="ClientApp\src\app\content\article\article.component.html" />
        <None Include="ClientApp\src\app\content\shop\shop-list\shop-list.component.css" />
        <None Include="ClientApp\src\app\content\shop\shop-list\shop-list.component.html" />
        <None Include="ClientApp\src\app\layout\nav-menu\nav-menu.component.css" />
        <None Include="ClientApp\src\app\layout\nav-menu\nav-menu.component.html" />
        <None Include="ClientApp\src\app\layout\side-nav\side-nav.component.css" />
        <None Include="ClientApp\src\app\layout\side-nav\side-nav.component.html" />
        <None Include="ClientApp\src\app\profile\user-profile\user-profile.component.css" />
        <None Include="ClientApp\src\app\profile\user-profile\user-profile.component.html" />
        <None Include="ClientApp\src\app\search\checkbox\checkbox.component.css" />
        <None Include="ClientApp\src\app\search\checkbox\checkbox.component.html" />
        <None Include="ClientApp\src\app\services\shop\shop.service.spec.ts" />
        <None Include="ClientApp\src\app\services\shop\shop.service.ts" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="ClientApp\src\app\common" />
      <Folder Include="ClientApp\src\app\content\shop" />
      <Folder Include="ClientApp\src\app\interfaces\cluster\rating" />
      <Folder Include="ClientApp\src\app\layout" />
      <Folder Include="ClientApp\src\app\profile" />
      <Folder Include="ClientApp\src\app\profile\admin-profile\tabs" />
      <Folder Include="ClientApp\src\app\services\admin" />
      <Folder Include="ClientApp\src\app\services\image" />
      <Folder Include="ClientApp\src\app\services\interactive-element" />
      <Folder Include="ClientApp\src\assets\Images" />
      <Folder Include="documentation\Content\BPMN" />
      <Folder Include="documentation\Content\Templates" />
    </ItemGroup>

    <ItemGroup>
      <TypeScriptCompile Include="ClientApp\src\app\interfaces\cluster\article\Article.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\interfaces\cluster\article\ArticleBlend.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\interfaces\cluster\article\ArticleEquipment.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\interfaces\complex\Address.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\interfaces\entity\Bean.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\interfaces\entity\Blend.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\interfaces\entity\BusStation.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\interfaces\entity\Company.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\interfaces\entity\ConsistsOf.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\interfaces\entity\Equipment.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\interfaces\entity\EquipmentCategory.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\interfaces\entity\Event.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\interfaces\entity\Location.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\interfaces\entity\POI.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\interfaces\entity\Reachable.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\interfaces\entity\Shop.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\interfaces\entity\User.ts" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
            <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
